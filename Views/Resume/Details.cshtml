@model CareerBuilderX.Models.Resume
@{
    Layout = "";
    
}
<head>
    <title>@Model.FName @Model.Lname Resume</title>
</head>
<link href="~/HomeDesign/assets/img/target.png" rel="icon">
<link href="~/HomeDesign/assets/img/target.png" rel="apple-touch-icon">
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet" />

<style>
    :root {
        --bg-light: #f7f9fc;
        --bg-white: #ffffff;
        --primary: #2E3A59;
        --accent: #EF8354;
        --text-dark: #333;
        --text-light: #777;
    }

    * {
        box-sizing: border-box;
    }

    body {
        margin: 0;
        font-family: 'Poppins', sans-serif;
        background: var(--bg-light);
        color: var(--text-dark);
    }

    .resume-wrapper {
        display: flex;
        max-width: 1200px;
        margin: 40px auto;
        background: var(--bg-white);
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 20px rgba(0,0,0,0.05);
    }

    .sidebar {
        width: 280px;
        background: var(--primary);
        color: #fff;
        padding: 40px 20px;
        position: relative;
    }

        .sidebar::after {
            content: '';
            position: absolute;
            top: 0;
            right: -40px;
            width: 80px;
            height: 80px;
            background: var(--bg-light);
            border-bottom-left-radius: 80px;
        }

        .sidebar h1 {
            margin: 0 0 15px;
            font-size: 1.8rem;
            font-weight: 700;
        }

    .about-text {
        font-size: 0.9rem;
        line-height: 1.5;
        color: #f0f0f0;
        margin-bottom: 30px;
        width: 250px;
    }

    .sidebar .section {
        margin-top: 20px;
    }

    .sidebar .section-title {
        font-size: 0.85rem;
        text-transform: uppercase;
        letter-spacing: .05em;
        margin-bottom: 10px;
        position: relative;
        font-weight: 600;
    }

        .sidebar .section-title::after {
            content: '';
            position: absolute;
            bottom: -4px;
            left: 0;
            width: 30px;
            height: 2px;
            background: var(--accent);
        }

    .sidebar ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .sidebar li {
        display: flex;
        align-items: center;
        margin-bottom: 12px;
        font-size: 0.9rem;
    }

        .sidebar li i {
            width: 20px;
            margin-right: 8px;
            color: var(--accent);
        }

    .skill-pill {
        display: inline-block;
        background: var(--accent);
        color: #fff;
        border-radius: 20px;
        padding: 4px 12px;
        margin: 4px 6px 4px 0;
        font-size: 0.85rem;
    }

    .main-content {
        flex-grow: 1;
        padding: 40px 30px;
    }

        .main-content .section {
            margin-bottom: 30px;
        }

        .main-content .section-title {
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--primary);
            margin-bottom: 16px;
            position: relative;
        }

            .main-content .section-title::after {
                content: '';
                position: absolute;
                bottom: -6px;
                left: 0;
                width: 40px;
                height: 3px;
                background: var(--accent);
            }

    .resume-item {
        margin-bottom: 20px;
    }

        .resume-item h5 {
            margin: 0;
            font-size: 1rem;
            font-weight: 600;
            color: var(--primary);
        }

        .resume-item small {
            display: block;
            font-size: 0.85rem;
            color: var(--text-light);
            margin: 4px 0;
        }

        .resume-item p {
            font-size: 0.94rem;
            line-height: 1.6;
            color: var(--text-dark);
            margin-top: 8px;
        }

    media (max-width: 768px) {
        .resume-wrapper

    {
        flex-direction: column;
    }

    .sidebar {
        width: 100%;
    }

        .sidebar::after {
            display: none;
        }

    }
</style>

<div class="resume-wrapper">
    <aside class="sidebar">
        <h1>@Model.FName @Model.Lname</h1>
        <div class="about-text">@Model.Summary</div>

        <div class="section">
            <div class="section-title">Contact</div>
            <ul>
                <li><i class="fas fa-envelope"></i>@Model.Email</li>
                <li><i class="fas fa-phone"></i>@Model.PhoneNumber</li>
                <li><i class="fas fa-map-marker-alt"></i>@Model.Address</li>
                @if (!string.IsNullOrEmpty(Model.LinkedInLink))
                {
                    <li><i class="fab fa-linkedin"></i><a href="@Model.LinkedInLink" target="_blank" style="color:inherit;">LinkedIn</a></li>
                }
                @if (!string.IsNullOrEmpty(Model.GitHubLink))
                {
                    <li><i class="fab fa-github"></i><a href="@Model.GitHubLink" target="_blank" style="color:inherit;">GitHub</a></li>
                }
            </ul>
        </div>

        @if (Model.Skills.Any())
        {
            <div class="section">
                <div class="section-title">Skills</div>
                @foreach (var group in Model.Skills.GroupBy(s => s.SkillType))
                {
                    <small style="display:block; margin:12px 0 6px; font-weight:600; color:#fff;">@group.Key</small>
                    <div>
                        @foreach (var skill in group)
                        {
                            <span class="skill-pill">@skill.SkillName</span>
                        }
                    </div>
                }
            </div>
        }

        @if (Model.Languages.Any())
        {
            <div class="section">
                <div class="section-title">Languages</div>
                <ul>
                    @foreach (var lang in Model.Languages)
                    {
                        <li><i class="fas fa-language"></i>@lang.LanguageName – @lang.Level</li>
                    }
                </ul>
            </div>
        }
    </aside>

    <main class="main-content">
        @if (Model.Educations.Any())
        {
            <div class="section">
                <div class="section-title">Education</div>
                @foreach (var edu in Model.Educations)
                {
                    <div class="resume-item">
                        <h5>@edu.Degree Of @edu.Major</h5>

                        <small>@edu.CollegeName</small>
                        @if (edu.StartDate.HasValue || edu.EndDate.HasValue)
                        {
                        <small>@edu.StartDate?.ToString("MMM yyyy") – @edu.EndDate?.ToString("MMM yyyy")</small>
                            
                        }
                        @if (edu.GPA.HasValue)
                        {
                            <small>GPA: @edu.GPA.Value.ToString("0.00")</small>
                        }
                    </div>
                }
            </div>
        }

        @if (Model.Experiences.Any())
        {
            <div class="section">
                <div class="section-title">Experience</div>
                @foreach (var exp in Model.Experiences)
                {
                    <div class="resume-item">
                        <h5>@exp.Title &mdash; <em>@exp.CompanyName</em></h5>
                        @if (exp.StartDate.HasValue || exp.EndDate.HasValue)
                        {
                            
                            <small>@exp.StartDate?.ToString("MMM yyyy") – @(exp.IsCurrent ? "Present" : exp.EndDate?.ToString("MMM yyyy"))</small>
                        }
                        
                        <p>@exp.Description</p>
                    </div>
                }
            </div>
        }

        @if (Model.Certifications != null && Model.Certifications.Any(c => !string.IsNullOrWhiteSpace(c.Title)))
        {
            <div class="section">
                <div class="section-title">Certifications</div>
                @foreach (var cert in Model.Certifications.Where(c => !string.IsNullOrWhiteSpace(c.Title)))
                {
                    <div class="resume-item">
                        <h5>@cert.Title</h5>
                        <small>@cert.ProviderName</small>
                        @if (cert.StartDate.HasValue || cert.EndDate.HasValue)
                        {
                            <small>@(cert.StartDate.HasValue ? cert.StartDate.Value.ToString("MMM yyyy") : "")@(cert.StartDate.HasValue && cert.EndDate.HasValue ? " – " : "")@(cert.EndDate.HasValue ? cert.EndDate.Value.ToString("MMM yyyy") : "")</small>
                        }
                    </div>
                }
            </div>
        }
    </main>
</div>